//===-- M88kRegisterBankInfo.h ----------------------------------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
/// \file
/// This file declares the targeting of the RegisterBankInfo class for M88k.
/// \todo This should be generated by TableGen.
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_M88K_GISEL_M88KREGISTERBANKINFO_H
#define LLVM_LIB_TARGET_M88K_GISEL_M88KREGISTERBANKINFO_H


#include "llvm/CodeGen/LowLevelType.h"
#include "llvm/CodeGen/RegisterBank.h"
#include "llvm/CodeGen/RegisterBankInfo.h"

#define GET_REGBANK_DECLARATIONS
#include "M88kGenRegisterBank.inc"

namespace llvm {

class TargetRegisterInfo;

class M88kGenRegisterBankInfo : public RegisterBankInfo {

protected:
    enum PartialMappingIdx {
        PMI_None = -1,
        PMI_GR32 = 0,
        PMI_GR64,
    }; 

    static RegisterBankInfo::PartialMapping PartMappings[];
    static RegisterBankInfo::ValueMapping ValMappings[];
    static PartialMappingIdx BankIDToCopyMapIdx[];

    enum ValueMappingIdx {
        InvalidIdx = 0,
        First30psIdx = 1,
    };

    static const RegisterBankInfo::ValueMapping * getValueMapping(PartialMappingIdx RBIdx);

    static const RegisterBankInfo::ValueMapping * getCopyMapping(unsigned DstBankID, unsigned SrcBankID, unsigned Size);

    #define GET_TARGET_REGBANK_CLASS
    #include "M88kGenRegisterBank.inc" 
};


class M88kRegisterBankInfo final : public M88kGenRegisterBankInfo {

public:
    M88kRegisterBankInfo(const TargetRegisterInfo &TRI);

    const RegisterBank &getRegBankFromRegClass(const TargetRegisterClass &RC,
                                               LLT Ty) const override;

    const InstructionMapping & getInstrMapping(const MachineInstr &MI) const override;

    void applyMappingImpl(const OperandsMapper &OpdMapper) const override;

};

} //end namespace llvm


#endif